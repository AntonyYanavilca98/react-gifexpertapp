{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","State","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAMlB,8CACA,gCAAOD,EAAP,KACA,2BAAOQ,KAAO,OACdC,MAAUT,EACVU,SApBsB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,MAAYV,GAAU,EAAfS,GAAe,EAAVT,KAEtC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAEX,IAEIC,EDfmBQ,CAAa7B,GAA/BO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OACI,oCACA,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEHT,EAAKE,KAAI,SAAAC,GACL,OAAO,kBAAC,EAAD,eACPoB,IAAQpB,EAAIC,IACPD,UEdhBqB,EAAe,WAAM,MAGQ7C,mBAAS,CAAC,cAHlB,mBAGtB8C,EAHsB,KAGV/C,EAHU,KAQ9B,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI8B,IAAK9B,EACLA,SAAUA,UClBtCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.48cef9ec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handLeSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('Submit hecho');\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats, ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit = { handLeSubmit }>\r\n        <h1> Add Category </h1> \r\n        <h2> { inputValue } </h2> \r\n        <input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n        /> \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=SqW1mACyVoPEWapSu81DIGo3EWppfUqo`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, id , url} ) => {\r\n    // console.log(title,id,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    data.map(img => {\r\n                        return <GifGridItem\r\n                        key = { img.id }\r\n                        { ...img }\r\n                        />\r\n                    })\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [State, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    console.log(imgs)\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                },3000);\r\n            })\r\n    }, [])\r\n\r\n    return State; // { data:[], loading: true };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai x', 'DBZ'];\r\n    const [ categories, setCategories ] = useState(['One Punch']);\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories,\"HunterXHunter\"]);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GitExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp/>,\n  document.getElementById('root')\n);\n\n// GitExpertApp\n// <h2>GifExpertApp</h2>\n\n"],"sourceRoot":""}